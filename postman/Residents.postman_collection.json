{
	"info": {
		"_postman_id": "6a28cbaf-9d8d-4dac-8d97-40cf1982b072",
		"name": "Residents",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2422058"
	},
	"item": [
		{
			"name": "AUTH",
			"item": [
				{
					"name": "Federated/Passport Logins",
					"item": [
						{
							"name": "Google login [auth]",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/google",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"google"
									]
								}
							},
							"response": []
						},
						{
							"name": "Google callback [auth]",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"USER1\",\n    \"password\": \"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/auth/google/callback",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"google",
										"callback"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login [auth]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const jsonData = pm.response.json();",
									"if (jsonData.token) {",
									"    pm.environment.set(\"JWT\", jsonData.token);",
									"} else {",
									"    console.error(\"JWT not found in response.\");",
									"}",
									"",
									"const xsrfToken = pm.cookies.get(\"xsrfToken\");",
									"if (xsrfToken) {",
									"    pm.environment.set(\"XSRF-TOKEN\", xsrfToken);",
									"} else {",
									"    console.error(\"XSRF token not found in cookies.\");",
									"}",
									"",
									"const refreshToken = pm.cookies.get(\"refreshToken\");",
									"if (refreshToken) {",
									"    pm.environment.set(\"REFRESH-TOKEN\", refreshToken)",
									"} else {",
									"    console.error(\"Refresh token not found in cookies.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"resident\",\n    \"password\": \"R351D3NT!zero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout [auth]",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"USER1\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/logout",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Magic login trigger [auth]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZmlyc3ROYW1lIjoiZmlyc3ROYW1lIiwibGFzdE5hbWUiOiJsYXN0TmFtZSIsImVtYWlsIjoiZW1haWwiLCJ1c2VybmFtZSI6IlVTRVIxIiwicGFzc3dvcmQiOiIkMmIkMTAkdm1ua2ZwWlJMUFdQdEkwN3ZqUzY2dTZrRmRQRzFkbHl6b0hmdW5ydHY4azNsZUFkcFZKMnkiLCJjcmVhdGVkQXQiOiIyMDI0LTA2LTE1VDExOjUyOjM3LjY4NFoiLCJyb2xlIjoiZGVmYXVsdCIsImlhdCI6MTcxODczODQzMiwiZXhwIjoxNzE4ODI0ODMyfQ.j854b1Uto1GJuiRoAVtrfMu3YRrVDa4ovzeGbWm802o",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"resident@resident.resident\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/magic-login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"magic-login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Magic login token [auth]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const jsonData = pm.response.json();",
									"if (jsonData.token) {",
									"    pm.environment.set(\"JWT\", jsonData.token);",
									"} else {",
									"    console.error(\"JWT not found in response.\");",
									"}",
									"",
									"const xsrfToken = pm.cookies.get(\"xsrfToken\");",
									"if (xsrfToken) {",
									"    pm.environment.set(\"XSRF-TOKEN\", xsrfToken);",
									"} else {",
									"    console.error(\"XSRF token not found in cookies.\");",
									"}",
									"",
									"const refreshToken = pm.cookies.get(\"refreshToken\");",
									"if (refreshToken) {",
									"    pm.environment.set(\"REFRESH-TOKEN\", refreshToken)",
									"} else {",
									"    console.error(\"Refresh token not found in cookies.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZmlyc3ROYW1lIjoiZmlyc3ROYW1lIiwibGFzdE5hbWUiOiJsYXN0TmFtZSIsImVtYWlsIjoiZW1haWwiLCJ1c2VybmFtZSI6IlVTRVIxIiwicGFzc3dvcmQiOiIkMmIkMTAkdm1ua2ZwWlJMUFdQdEkwN3ZqUzY2dTZrRmRQRzFkbHl6b0hmdW5ydHY4azNsZUFkcFZKMnkiLCJjcmVhdGVkQXQiOiIyMDI0LTA2LTE1VDExOjUyOjM3LjY4NFoiLCJyb2xlIjoiZGVmYXVsdCIsImlhdCI6MTcxODczODQzMiwiZXhwIjoxNzE4ODI0ODMyfQ.j854b1Uto1GJuiRoAVtrfMu3YRrVDa4ovzeGbWm802o",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/auth/magic-login/zrbq0bilxr7nvu48i56jt4uw",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"magic-login",
								"zrbq0bilxr7nvu48i56jt4uw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password trigger [auth]",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"email\": \"resident@resident.resident\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/reset-password",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"reset-password"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password token [auth]",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"password\": \"mt!@vbSFSDFn3__dbbxhyxnzy0zltfxn9\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/reset-password/pk9ctoc0cu4ompfle4doukti",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"reset-password",
								"pk9ctoc0cu4ompfle4doukti"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token [auth]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"if (jsonData.accessToken) {",
									"    pm.environment.set(\"JWT\", jsonData.accessToken);",
									"} else {",
									"    console.error(\"JWT not found in response.\");",
									"}",
									"",
									"const xsrfToken = pm.cookies.get(\"xsrfToken\");",
									"if (xsrfToken) {",
									"    pm.environment.set(\"XSRF-TOKEN\", xsrfToken);",
									"} else {",
									"    console.error(\"XSRF token not found in cookies.\");",
									"}",
									"",
									"const refreshToken = pm.cookies.get(\"refreshToken\");",
									"if (refreshToken) {",
									"    pm.environment.set(\"REFRESH-TOKEN\", refreshToken)",
									"} else {",
									"    console.error(\"Refresh token not found in cookies.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/refresh",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"refresh"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Clear Expired Tokens [auth]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"refreshToken\": \"{{REFRESH-TOKEN}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/clear-tokens",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"clear-tokens"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate user account [auth]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3000/auth/validate/tokenid.userid",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"validate",
								"tokenid.userid"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "USER",
			"item": [
				{
					"name": "Create/Register [user]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Resident\",\n    \"lastName\": \"Resident\",\n    \"email\": \"Resident@gmail.ie\",\n    \"username\": \"Resident\",\n    \"password\": \"StrongPpa$$Word123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/register",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User [user]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"bansana\",\n    \"lastName\": \"rama\",\n    \"email\": \"email@gmaei.cam\",\n    \"username\": \"XXXX\",\n    \"password\": \"asdfasdf\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/e6os0az2mqtnt7yynmnuhbzl",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"e6os0az2mqtnt7yynmnuhbzl"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Meta [user]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metaItem\": \"bansana\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/meta/kwwmlz57qlf8afkkd6p8r0q4",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"meta",
								"kwwmlz57qlf8afkkd6p8r0q4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Users [user]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/users?limit=1&offset=2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID [user]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/z97jcbkor2nvjmp4zz2bto3g",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"z97jcbkor2nvjmp4zz2bto3g"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get own User [user]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/self",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"self"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a User [user]",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "xsrf-token",
								"value": "{{XSRF-TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3000/users/yc92thpsc31l68wxa5d5c30l",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"yc92thpsc31l68wxa5d5c30l"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "jwt",
			"value": "x"
		}
	]
}